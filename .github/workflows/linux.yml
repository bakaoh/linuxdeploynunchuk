name: linux

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-16.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
 
      - name: Checkout nunchuk-qt
        working-directory: ${{runner.workspace}}
        env:
          GITLAB_AT: ${{ secrets.GITLAB_AT }}
        run: |
          git clone --branch=sprint4 https://bakaoh:$GITLAB_AT@gitlab.com/nunchuck/nunchuck-qt nunchuk-qt --depth 1
          cd nunchuk-qt
          git submodule update --depth 1 --init --recursive
          
      - name: Install packages
        uses: ryankurte/action-apt@v0.2.0
        with:
          packages: libevent-dev libssl-dev libdb-dev libdb++-dev build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 mesa-common-dev libglu1-mesa-dev

      - name: Cache Qt
        uses: actions/cache@v2
        id: cache-qt
        with:
          path: /opt/qt512
          key: linux-qt-5.12

      - name: Install Qt
        if: steps.cache-qt.outputs.cache-hit != 'true'
        run: |
          sudo add-apt-repository ppa:beineri/opt-qt-5.12.1-xenial
          sudo apt update
          sudo apt install qt512-meta-full
     
      - name: Cache Boost
        uses: actions/cache@v2
        id: cache-boost
        with:
          path: ${{runner.workspace}}/boost_1_73_0
          key: linux-boost-1.73.0

      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          wget https://dl.bintray.com/boostorg/release/1.73.0/source/boost_1_73_0.tar.bz2
          tar --bzip2 -xf ./boost_1_73_0.tar.bz2
          cd boost_1_73_0
          ./bootstrap.sh --prefix=${{runner.workspace}}/boost_1_73_0
          ./b2 install
 
      - name: Cache contrib
        uses: actions/cache@v2
        id: cache-contrib
        with:
          path: ${{runner.workspace}}/nunchuk-qt/contrib/libnunchuk/contrib
          key: linux-543693b92b954d186cb466a2f14b480f3bcf8c0b

      - name: Build Bitcoin Core
        if: steps.cache-contrib.outputs.cache-hit != 'true'
        working-directory: ${{runner.workspace}}/nunchuk-qt/contrib/libnunchuk/contrib/bitcoin
        run: |
          ./autogen.sh
          ./configure --without-gui --disable-zmq --with-miniupnpc=no --with-incompatible-bdb --with-boost=${{runner.workspace}}/boost_1_73_0
          make -j8

      - name: Build SqlCipher
        if: steps.cache-contrib.outputs.cache-hit != 'true'
        working-directory: ${{runner.workspace}}/nunchuk-qt/contrib/libnunchuk/contrib/sqlcipher
        run: |
          ./configure --enable-tempstore=yes CFLAGS="-DSQLITE_HAS_CODEC" LDFLAGS="-lcrypto"
          make -j8

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake ${{runner.workspace}}/nunchuk-qt -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBOOST_ROOT=${{runner.workspace}}/boost_1_73_0 -DCMAKE_PREFIX_PATH=/opt/qt512/lib/cmake

      - name: Build nunchuk-qt
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE
